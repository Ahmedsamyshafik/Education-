@model (List<QuizTable>Quizes , List<UsersQuiz> UsQuizes )
@using Microsoft.AspNetCore.Identity;
@{
	@inject UserManager<ApplicationUser> usermanager

}
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<link rel="stylesheet" href="~/css/exam.css">
	<link rel="stylesheet" href="~/css/edit.css">
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
	<link rel="preconnect" href="https://fonts.googleapis.com">
	<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
	<link href="https://fonts.googleapis.com/css2?family=Noto+Kufi+Arabic:wght@200;300;400;500;600&display=swap" rel="stylesheet">
	<link rel="stylesheet" href="~/css/all.min.css">
	<link rel="stylesheet" href="~/css/bootstrap.min.css">
	<title>امتحانات الترم الاول</title>
</head>
<body>

	@if (User.Identity.IsAuthenticated)
	{
		string name = User.Identity.Name;
		if (name != null || name != string.Empty)
		{
			var Cuser = await usermanager.FindByNameAsync(name);
			if (Cuser != null)
			{
				var userrole = await usermanager.IsInRoleAsync(Cuser, Constans.roleAdmin);
				if (userrole)
				{
					<div class="buttonss">
						<div class="dropdownn ">
							<a class="btn btn-light border mx-1 dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
								Add Quiz
							</a>

							<ul class="dropdown-menu ">
								<li><a class="dropdown-item" asp-action="AddQuiz" target="_blank">اختياري</a></li>
								<li><a class="dropdown-item" asp-action="AddWrittenQuiz" target="_blank">مقالي</a></li>
								<li><a class="dropdown-item" asp-action="Correcting" target="_blank"> تصحيح مقالي</a></li>

							</ul>
						</div>


						@if (ViewBag.id != 3)
						{
						<button class="cssbuttons-io-button">
							الترم الثاني

							<div class="icon">
								<a asp-action="index2" class="d-flex justify-content-center align-items-center" target="_blank" style="width: 100%; height: 100%;">
									<svg height="24"
										 width="24"
										 viewBox="0 0 24 24"
										 xmlns="http://www.w3.org/2000/svg">
										<path d="M0 0h24v24H0z" fill="none"></path>
										<path d="M16.172 11l-5.364-5.364 1.414-1.414L20 12l-7.778 7.778-1.414-1.414L16.172 13H4v-2z"
											  fill="currentColor"></path>
									</svg>
								</a>

							</div>
						</button>
						}

					</div>

					<!-- الادمن -->

					<div class="scroll">
						<i class="fa-solid fa-arrow-down-long scrolling"></i>
					</div>

				}
			}
		}
	}
	<!-- عشان الادمن -->


	<div id="quizLinks" class="container">
		<form method="post" asp-action="QuizAccess">

			@if (Model.Quizes.Count() > 0)
			{
				for (var i = 0; i < Model.Quizes.Count(); i++)
				{
					<div class="quiz">
						<h3>@Model.Quizes[i].Title</h3>

						<input asp-for="@Model.Quizes[i].Title" name="Quizes[@i].Title" hidden />
						<input asp-for="@Model.Quizes[i].Description" name="Quizes[@i].Description" hidden />

						<input asp-for="@Model.Quizes[i].Id" name="Quizes[@i].Id" hidden />
						<p>@Model.Quizes[i].Description</p>


						@if (User.Identity.IsAuthenticated)
						{
							string name = User.Identity.Name;
							if (name != null || name != string.Empty)
							{
								var Cuser = await usermanager.FindByNameAsync(name);
								if (Cuser != null)
								{
									var userrole = await usermanager.IsInRoleAsync(Cuser, Constans.roleAdmin);
									if (userrole)
									{
										<div class="lable">
											<input asp-for="@Model.Quizes[i].Access" name="Quizes[@i].Access" type="checkbox" placeholder="..">
											<label>active</label>
										</div>
										<button asp-action="DeleteQuiz" class="btn bg-danger" asp-route-id="@Model.Quizes.ElementAt(i).Id">Delete</button>

									}
								}
							}
						}
						<a href="/Quiz/TakeQuizExam/@Model.Quizes.ElementAt(i).Id">Click</a>




					</div>
				}
			}
			@if (User.Identity.IsAuthenticated)
			{
				string name = User.Identity.Name;
				if (name != null || name != string.Empty)
				{
					var Cuser = await usermanager.FindByNameAsync(name);
					if (Cuser != null)
					{
						var userrole = await usermanager.IsInRoleAsync(Cuser, Constans.roleAdmin);
						if (userrole)
						{
							<button type="submit" class="btn savebtn border border-3 bg-body-secondary">Submit</button>

						}
					}
				}
			}
		</form>



	</div>




	@if (User.Identity.IsAuthenticated)
	{
		string name = User.Identity.Name;
		if (name != null || name != string.Empty)
		{
			var Cuser = await usermanager.FindByNameAsync(name);
			if (Cuser != null)
			{
				var userrole = await usermanager.IsInRoleAsync(Cuser, Constans.roleAdmin);
				if (userrole)
				{
					<div class="listoftable container">
						<form id="searchForm">
							<label for="name" class="h2 ">Search by Name</label>
							<input type="text" id="name" name="name" placeholder="Enter name...">

							<select id="degree" name="degree" class="form-select m-auto my-2 rounded-3">
								<option value="" disabled selected hidden>اختر الصف</option>
								<option value="الأول" class="form-select">الصف الاول الثانوي</option>
								<option value="الثاني">الصف الثاني الثانوي</option>
								<option value="الثالث">الصف الثالث الثانوي</option>

							</select>


							<input type="submit" value="Search" class="sub">
						</form>

						<table id="studentTable" class="table">
							<thead>
								<tr>
									<th scope="col">Name</th>
									<th scope="col">Degree</th>
									<th scope="col">Exam Name</th>
									<th scope="col">Exam Degree</th>
									<th scope="col"></th>

								</tr>
							</thead>
							<tbody>
								@if (Model.UsQuizes.Count() > 0)
								{
									@for (int i = 0; i < Model.UsQuizes.Count(); i++)
									{
										<tr>
											<td>@Model.UsQuizes.ElementAt(i).UserName</td>
											@{
												var user = await usermanager.FindByNameAsync(Model.UsQuizes.ElementAt(i).UserName);
												var userDeg = user.degree;
											}


											<td>@userDeg</td>
											<td>@Model.UsQuizes.ElementAt(i).ExamName</td>
											<td>@Model.UsQuizes.ElementAt(i).ExamDegree / @Model.UsQuizes.ElementAt(i).MaxDegree  </td>
											<td>


												<a asp-action="DeleteUserQuiz" asp-controller="Quiz" asp-route-id="@Model.UsQuizes.ElementAt(i).Id.ToString()" class="btn btn-danger">Delete</a>



											</td>
										</tr>
									}
								}



								<!-- Add more rows here -->
							</tbody>
						</table>
					</div>

				}
			}
		}
	}



	<script src="~/js/exam.js"></script>
</body>
